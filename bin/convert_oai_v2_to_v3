#!/usr/bin/env python2.6
# -*- coding: utf-8 -*-
## begin license ##
#
#    Meresco Oai are components to build Oai repositories, based on Meresco
#    Core and Meresco Components.
#    Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
#
#    This file is part of Meresco Oai.
#
#    Meresco Oai is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    Meresco Oai is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Meresco Oai; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

from os import system                             #DO_NOT_DISTRIBUTE
from sys import path as sysPath                   #DO_NOT_DISTRIBUTE
system('find .. -name "*.pyc" | xargs rm -f')     #DO_NOT_DISTRIBUTE
                                                  #DO_NOT_DISTRIBUTE
from glob import glob                             #DO_NOT_DISTRIBUTE
for path in glob('../deps.d/*'):                  #DO_NOT_DISTRIBUTE
    sysPath.insert(0, path)                       #DO_NOT_DISTRIBUTE
sysPath.insert(0,'..')                            #DO_NOT_DISTRIBUTE

import sys
from os import listdir, remove, rename
from os.path import join, isdir, isfile
from shutil import rmtree
from bsddb import btopen
from meresco.components.facetindex import IntegerList
from meresco.oai import OaiJazz


def convert(path):
    stamp2identifier = btopen(join(path, "stamp2identifier.bd"))
    orig_stamp2identifier = btopen(join(path, "stamp2identifier", "keyvalue"), 'r')
    orig_identifier2stamp = btopen(join(path, "stamp2identifier", "valuekey"), 'r')
    for stamp, identifier in orig_stamp2identifier.items():
        stamp2identifier[stamp] = identifier
        stamp2identifier["id:"+identifier] = stamp
    stamp2identifier.sync()
    stamp2identifier.close()
    rmtree(join(path, 'stamp2identifier'))

    rename(join(path, 'identifier2setSpecs', 'keyvalue'), join(path, 'identifier2setSpecs.bd'))
    rmtree(join(path, 'identifier2setSpecs'))

def main():
    if len(sys.argv) != 2:
        print 'Usage: %s [OAI directory]' % sys.argv[0]
        exit(1)
    directory = sys.argv[1]
    versionFile = join(directory, 'oai.version')
    version = open(versionFile).read()
    assert version == '2', repr(version) 
    convert(directory)
    open(versionFile, 'w').write('3')
    print "Finished converting %s to OAI data format v3." % directory

if __name__ == '__main__':
    main()

