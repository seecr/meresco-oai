#!/usr/bin/env python
# -*- coding: utf-8 -*-
## begin license ##
#
# "Meresco Oai" are components to build Oai repositories, based on
# "Meresco Core" and "Meresco Components".
#
# Copyright (C) 2014 Netherlands Institute for Sound and Vision http://instituut.beeldengeluid.nl/
# Copyright (C) 2014 Seecr (Seek You Too B.V.) http://seecr.nl
#
# This file is part of "Meresco Oai"
#
# "Meresco Oai" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "Meresco Oai" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "Meresco Oai"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

from seecr.test.utils import includeParentAndDeps #DO_NOT_DISTRIBUTE
includeParentAndDeps(__file__)                    #DO_NOT_DISTRIBUTE

from meresco.oai import OaiJazz

import sys
from os.path import join


def convert(path):
    from meresco.oai.oaijazz import getLucene, lazyImport, _stampFromDocument
    lazyImport()
    from org.meresco.oai import OaiSortingCollector
    from org.apache.lucene.search import MatchAllDocsQuery, NumericRangeQuery
    from java.lang import Long

    writer, reader, searcher = getLucene(path)
    batchSize = 2
    shouldCountHits = False
    doorgaan = True
    continueAfter = None
    while doorgaan:
        if continueAfter:
            start = continueAfter + 1
            stop = Long.MAX_VALUE
            query = NumericRangeQuery.newLongRange("stamp", start, stop, True, True)
        else:
            query = MatchAllDocsQuery()
        collector = OaiSortingCollector(batchSize, shouldCountHits)
        searcher.search(query, None, collector)
        docs = collector.docs(searcher)
        print len(docs)
        if len(docs) == 0:
            doorgaan = False
        for doc in docs:
            print doc.getField('identifier').stringValue()
            continueAfter = _stampFromDocument(doc)
            print continueAfter
    raise NotImplementedError()

def main():
    if len(sys.argv) != 2:
        print 'Usage: %s [OAI directory]' % sys.argv[0]
        exit(1)
    directory = sys.argv[1]
    versionFile = join(directory, 'oai.version')
    version = open(versionFile).read()
    assert version == '7', repr(version)
    assert OaiJazz.version == '8', repr(OaiJazz.version)
    convert(directory)
    open(versionFile, 'w').write('8')
    print "Finished converting %s to OAI data format v8." % directory

if __name__ == '__main__':
    main()

