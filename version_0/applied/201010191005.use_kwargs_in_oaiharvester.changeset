Changeset created on Tue Oct 19 10:05:07 CEST 2010 by Seek You Too

Description: Use kwargs in OaiHarvester

    OaiHarvester will now use keywordarguments to send calls to its
    observers.

Baseline version: meresco/meresco-oai/workingsets/3.3-Edurep/version_1

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/meresco/oai/oaiharvester.py version_2/meresco/oai/oaiharvester.py
--- version_1/meresco/oai/oaiharvester.py	2010-10-18 11:45:53.000000000 +0200
+++ version_2/meresco/oai/oaiharvester.py	2010-10-19 10:04:10.000000000 +0200
@@ -132,7 +132,7 @@
                 self._logError("%s: %s" % (error.get("code"), error.text))
             return None
         else:
-            self.any.add(lxmlNode)
+            self.any.add(lxmlNode=lxmlNode)
             return head(lxmlNode.xpath("/oai:OAI-PMH/oai:ListRecords/oai:resumptionToken/text()", 
                                        namespaces=namespaces))
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/test/oaiharvestertest.py version_2/test/oaiharvestertest.py
--- version_1/test/oaiharvestertest.py	2010-10-18 11:45:53.000000000 +0200
+++ version_2/test/oaiharvestertest.py	2010-10-19 10:04:10.000000000 +0200
@@ -80,7 +80,9 @@
             callback() # sok.recv
             callback() # sok.recv
             self.assertEquals('add', observer.calledMethods[0].name)
-            self.assertEqualsWS(BODY, tostring(observer.calledMethods[0].args[0]))
+            self.assertFalse(len(observer.calledMethods[0].args))
+            self.assertEquals(['lxmlNode'], observer.calledMethods[0].kwargs.keys())
+            self.assertEqualsWS(BODY, tostring(observer.calledMethods[0].kwargs['lxmlNode']))
 
     def testNoConnectionPossible(self):
         harvester, observer, reactor = self.getHarvester("some.nl", 'no-port', "/oai", 'dc')
@@ -127,7 +129,7 @@
             callback() # sok.recv
             callback() # recv = ''
             self.assertEquals('add', observer.calledMethods[0].name)
-            self.assertEqualsWS(BODY, tostring(observer.calledMethods[0].args[0]))
+            self.assertEqualsWS(BODY, tostring(observer.calledMethods[0].kwargs['lxmlNode']))
             self.assertEquals('removeReader', reactor.calledMethods[4].name)
             self.assertEquals('addTimer', reactor.calledMethods[-1].name)
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_1/test/oaisuspendtest.py version_2/test/oaisuspendtest.py
--- version_1/test/oaisuspendtest.py	2010-10-18 11:45:53.000000000 +0200
+++ version_2/test/oaisuspendtest.py	2010-10-19 10:04:10.000000000 +0200
@@ -80,11 +80,11 @@
         sleep(1.0 + 1.0 * requests)
        
         self.assertEquals(2, len(observer.calledMethods))
-        arg = tostring(observer.calledMethods[0].args[0])
-        self.assertTrue("id0" in arg, arg)
-        self.assertTrue("id1" in arg, arg)
-        arg = tostring(observer.calledMethods[1].args[0])
-        self.assertTrue("id2" in arg, arg)
+        kwarg = tostring(observer.calledMethods[0].kwargs['lxmlNode'])
+        self.assertTrue("id0" in kwarg, kwarg)
+        self.assertTrue("id1" in kwarg, kwarg)
+        kwarg = tostring(observer.calledMethods[1].kwargs['lxmlNode'])
+        self.assertTrue("id2" in kwarg, kwarg)
 
         self.assertEquals(1, len(oaiJazz._suspended))
 
@@ -93,8 +93,8 @@
         sleep(0.1)
         self.assertEquals(0, len(oaiJazz._suspended))
         self.assertEquals(3, len(observer.calledMethods))
-        arg = tostring(observer.calledMethods[2].args[0])
-        self.assertTrue("id3" in arg, arg)
+        kwarg = tostring(observer.calledMethods[2].kwargs['lxmlNode'])
+        self.assertTrue("id3" in kwarg, kwarg)
         sleep(1.0)
         self.assertEquals(1, len(oaiJazz._suspended))
 
@@ -133,8 +133,8 @@
         requests = 1
         sleep(1.0 + 1.0 * requests)
         self.assertEquals(1, len(observer.calledMethods))
-        arg = tostring(observer.calledMethods[0].args[0])
-        self.assertTrue("id0" in arg, arg)
+        kwarg = tostring(observer.calledMethods[0].kwargs['lxmlNode'])
+        self.assertTrue("id0" in kwarg, kwarg)
         stop()
 
         storageComponent.add("id1", "prefix", "<a>a1</a>")
@@ -144,9 +144,9 @@
         requests = 1
         sleep(1.0 + 1.0 * requests)
         self.assertEquals(2, len(observer.calledMethods))
-        arg = tostring(observer.calledMethods[1].args[0])
-        self.assertFalse("id0" in arg, arg)
-        self.assertTrue("id1" in arg, arg)
+        kwarg = tostring(observer.calledMethods[1].kwargs['lxmlNode'])
+        self.assertFalse("id0" in kwarg, kwarg)
+        self.assertTrue("id1" in kwarg, kwarg)
         stop()
 
     def startOaiHarvester(self, portNumber, observer):
