Changeset created on Fri Feb 26 12:05:10 CET 2010 by Seek You Too

Description: OaiAddRecord now uses lxml instead of amara.

    Most components in Meresco use lxml, now the OaiAddRecord
    also conforms to that standard. This prevents unnecessary
    conversions.

    Besides introducing lxml some unused code is cleaned up.

Baseline version: meresco-components/tags/version_2.23.5

diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/merescocomponents/oai/__init__.py version_1/merescocomponents/oai/__init__.py
--- version_0/merescocomponents/oai/__init__.py	2010-02-25 16:28:04.000000000 +0100
+++ version_1/merescocomponents/oai/__init__.py	2010-02-26 12:04:50.638790614 +0100
@@ -7,7 +7,8 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -31,7 +32,6 @@
 from oaiprovenance import OaiProvenance
 from oaisetselect import OaiSetSelect
 from oaiidentifierrename import OaiIdentifierRename
-from uniquenumbergenerator import UniqueNumberGenerator
 from fields2oairecord import Fields2OaiRecordTx
 from oaijazz import OaiJazz
 from oaiaddrecord import OaiAddRecord, OaiAddRecordWithDefaults
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/merescocomponents/oai/oaiaddrecord.py version_1/merescocomponents/oai/oaiaddrecord.py
--- version_0/merescocomponents/oai/oaiaddrecord.py	2010-02-25 16:28:04.000000000 +0100
+++ version_1/merescocomponents/oai/oaiaddrecord.py	2010-02-26 12:04:50.652788296 +0100
@@ -7,7 +7,8 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -27,23 +28,26 @@
 #
 ## end license ##
 
-from cq2utils.xmlutils import findNamespaces
 from merescocore.framework import Transparant
+from lxml.etree import iselement
+
+namespaces = {
+    'oai': 'http://www.openarchives.org/OAI/2.0/',
+    'xsi': "http://www.w3.org/2001/XMLSchema-instance",
+}
 
 class OaiAddRecord(Transparant):
-    def add(self, id, name, record):
-        sets=set()
-        if record.localName == "header" and record.namespaceURI == "http://www.openarchives.org/OAI/2.0/" and getattr(record, 'setSpec', None):
-            sets.update((str(s), str(s)) for s in record.setSpec)
-
-        if 'amara.bindery.root_base' in str(type(record)):
-            record = record.childNodes[0]
-        ns2xsd = _findSchema(record)
-        nsmap = findNamespaces(record)
-        ns = nsmap[record.prefix]
-        schema, namespace = (ns2xsd.get(ns,''), ns)
-        schema, namespace = self._magicSchemaNamespace(record.prefix, name, schema, namespace)
-        metadataFormats=[(name, schema, namespace)]
+    def add(self, id, partName, record):
+        record = record if iselement(record) else record.getroot()
+        setSpecs = record.xpath('/oai:header/oai:setSpec/text()', namespaces=namespaces)
+        sets = set((str(s), str(s)) for s in setSpecs)
+        
+        namespace = record.nsmap.get(record.prefix or None, '') 
+        schemaLocations = record.xpath('@xsi:schemaLocation', namespaces=namespaces)
+        ns2xsd = ''.join(schemaLocations).split()
+        schema = dict(zip(ns2xsd[::2],ns2xsd[1::2])).get(namespace, '')
+        schema, namespace = self._magicSchemaNamespace(record.prefix, partName, schema, namespace)
+        metadataFormats=[(partName, schema, namespace)]
 
         self.do.addOaiRecord(identifier=id, sets=sets, metadataFormats=metadataFormats)
 
@@ -63,12 +67,3 @@
     def add(self, id, name, record):
         self.do.addOaiRecord(identifier=id, sets=self._sets, metadataFormats=self._metadataFormats)
 
-def _findSchema(record):
-    if 'amara.bindery.root_base' in str(type(record)):
-        record = record.childNodes[0]
-    ns2xsd = {}
-    if hasattr(record, 'schemaLocation'):
-        nsXsdList = record.schemaLocation.split()
-        for n in range(0, len(nsXsdList), 2):
-            ns2xsd[nsXsdList[n]] = nsXsdList[n+1]
-    return ns2xsd
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/merescocomponents/oai/oaijazz.py version_1/merescocomponents/oai/oaijazz.py
--- version_0/merescocomponents/oai/oaijazz.py	2010-02-25 16:28:04.000000000 +0100
+++ version_1/merescocomponents/oai/oaijazz.py	2010-02-26 12:04:50.652788296 +0100
@@ -8,7 +8,8 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -29,11 +30,10 @@
 ## end license ##
 
 from __future__ import with_statement
-from os.path import isdir, join, isfile
+from os.path import isdir, join
 from os import makedirs, listdir, rename
 from storage.storage import escapeName, unescapeName
 from time import time, strftime, localtime, mktime, strptime
-from itertools import ifilter, dropwhile, takewhile, chain
 from merescocomponents.sorteditertools import OrIterator, AndIterator, WrapIterable
 from merescocomponents import SortedFileList, DoubleUniqueBerkeleyDict, BerkeleyDict
 
@@ -60,7 +60,9 @@
         self._identifier2setSpecs = BerkeleyDict(join(self._directory, 'identifier2setSpecs'))
         self._read()
 
-    def addOaiRecord(self, identifier, sets=[], metadataFormats=[]):
+    def addOaiRecord(self, identifier, sets=None, metadataFormats=None):
+        sets = [] if sets == None else sets
+        metadataFormats = [] if metadataFormats == None else metadataFormats
         assert [prefix for prefix, schema, namespace in metadataFormats], 'No metadataFormat specified for record with identifier "%s"' % identifier
         for setSpec, setName in sets:
             assert SETSPEC_SEPARATOR not in setSpec, 'SetSpec "%s" contains illegal characters' % setSpec
@@ -81,7 +83,8 @@
         self._add(stamp, identifier, oldSets, oldPrefixes)
         self._tombStones.append(stamp)
 
-    def oaiSelect(self, sets=[], prefix='oai_dc', continueAfter='0', oaiFrom=None, oaiUntil=None, batchSize='ignored'):
+    def oaiSelect(self, sets=None, prefix='oai_dc', continueAfter='0', oaiFrom=None, oaiUntil=None, batchSize='ignored'):
+        sets = [] if sets == None else sets
         start = max(int(continueAfter)+1, self._fromTime(oaiFrom))
         stop = self._untilTime(oaiUntil)
         stampIds = self._prefixes.get(prefix, [])
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/merescocomponents/oai/oaiprovenance.py version_1/merescocomponents/oai/oaiprovenance.py
--- version_0/merescocomponents/oai/oaiprovenance.py	2010-02-25 16:28:04.000000000 +0100
+++ version_1/merescocomponents/oai/oaiprovenance.py	2010-02-26 12:04:50.637790780 +0100
@@ -7,7 +7,8 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -27,13 +28,8 @@
 #
 ## end license ##
 
-from StringIO import StringIO
-from lxml.etree import parse
-
-from merescocore.framework import Observable
 from merescocore.components import XmlCompose
 
-
 PROVENANCE_TEMPLATE = """<provenance xmlns="http://www.openarchives.org/OAI/2.0/provenance"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/provenance
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/merescocomponents/oai/oairecordverb.py version_1/merescocomponents/oai/oairecordverb.py
--- version_0/merescocomponents/oai/oairecordverb.py	2010-02-25 16:28:04.000000000 +0100
+++ version_1/merescocomponents/oai/oairecordverb.py	2010-02-26 12:04:50.653788130 +0100
@@ -8,7 +8,8 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -28,8 +29,6 @@
 #
 ## end license ##
 from xml.sax.saxutils import escape as xmlEscape
-from amara.binderytools import bind_string
-from StringIO import StringIO
 
 from oaiverb import OaiVerb
 from merescocore.framework.generatorutils import decorate
Only in version_0/merescocomponents/oai: uniquenumbergenerator.py
Only in version_0/merescocomponents/oai: xml2document.py
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/alltests.py version_1/test/alltests.py
--- version_0/test/alltests.py	2010-02-25 16:28:04.000000000 +0100
+++ version_1/test/alltests.py	2010-02-26 12:04:50.605796078 +0100
@@ -85,7 +85,6 @@
 from oai.oaiprovenancetest import OaiProvenanceTest
 from oai.resumptiontokentest import ResumptionTokenTest
 from oai.oaisetselecttest import OaiSetSelectTest
-from oai.xml2documenttest import Xml2DocumentTest
 from oai.oaijazztest import OaiJazzTest
 from oai.oaiaddrecordtest import OaiAddRecordTest
 from oai.oaijazzimplementationstest import OaiJazzImplementationsTest
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/oai/oaiaddrecordtest.py version_1/test/oai/oaiaddrecordtest.py
--- version_0/test/oai/oaiaddrecordtest.py	2010-02-25 16:28:04.000000000 +0100
+++ version_1/test/oai/oaiaddrecordtest.py	2010-02-26 12:04:50.575801045 +0100
@@ -7,7 +7,8 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -29,7 +30,11 @@
 from cq2utils import CQ2TestCase, CallTrace
 
 from merescocomponents.oai import OaiAddRecord
-from amara.binderytools import bind_string
+from StringIO import StringIO
+from lxml.etree import parse
+
+def parseLxml(aString):
+    return parse(StringIO(aString)).getroot()
 
 class OaiAddRecordTest(CQ2TestCase):
     def setUp(self):
@@ -40,7 +45,7 @@
         self.subject.addObserver(self.observer)
 
     def testAdd(self):
-        self.subject.add('id', 'partName', bind_string('<empty/>'))
+        self.subject.add('id', 'partName', parseLxml('<empty/>'))
 
         self.assertEquals(1,len(self.observer.calledMethods))
         self.assertEquals('addOaiRecord', self.observer.calledMethods[0].name)
@@ -49,45 +54,62 @@
         self.assertEquals(set(), self.observer.calledMethods[0].kwargs['sets'])
 
     def testAddSetInfo(self):
-        header = bind_string('<header xmlns="http://www.openarchives.org/OAI/2.0/"><setSpec>1</setSpec></header>').header
+        header = parseLxml('<header xmlns="http://www.openarchives.org/OAI/2.0/"><setSpec>1</setSpec></header>')
         
         self.subject.add('123', 'oai_dc', header)
         
         self.assertEquals(1,len(self.observer.calledMethods))
         self.assertEquals('addOaiRecord', self.observer.calledMethods[0].name)
         self.assertEquals('123', self.observer.calledMethods[0].kwargs['identifier'])
+        self.assertEquals(set([('1','1')]), self.observer.calledMethods[0].kwargs['sets'])
         self.assertEquals([('oai_dc', '', "http://www.openarchives.org/OAI/2.0/")], self.observer.calledMethods[0].kwargs['metadataFormats'])
+
+    def testAddElementTree(self):
+        header = parse(StringIO('<header xmlns="http://www.openarchives.org/OAI/2.0/"><setSpec>1</setSpec></header>'))
+        
+        self.subject.add('123', 'oai_dc', header)
+        
+        self.assertEquals(1,len(self.observer.calledMethods))
+        self.assertEquals('addOaiRecord', self.observer.calledMethods[0].name)
+        self.assertEquals('123', self.observer.calledMethods[0].kwargs['identifier'])
         self.assertEquals(set([('1','1')]), self.observer.calledMethods[0].kwargs['sets'])
+        self.assertEquals([('oai_dc', '', "http://www.openarchives.org/OAI/2.0/")], self.observer.calledMethods[0].kwargs['metadataFormats'])
 
     def testAddRecognizeNamespace(self):
         header = '<header xmlns="this.is.not.the.right.ns"><setSpec>%s</setSpec></header>'
-        self.subject.add('123', 'oai_dc', bind_string(header % 1).header)
+        self.subject.add('123', 'oai_dc', parseLxml(header % 1))
         header = '<header xmlns="http://www.openarchives.org/OAI/2.0/"><setSpec>%s</setSpec></header>'
-        self.subject.add('124', 'oai_dc', bind_string(header % 1).header)
+        self.subject.add('124', 'oai_dc', parseLxml(header % 1))
         self.assertEquals([('oai_dc', '', "this.is.not.the.right.ns")], self.observer.calledMethods[0].kwargs['metadataFormats'])
         self.assertEquals([('oai_dc', '', "http://www.openarchives.org/OAI/2.0/")], self.observer.calledMethods[1].kwargs['metadataFormats'])
 
     def testMultipleHierarchicalSets(self):
         spec = "<setSpec>%s</setSpec>"
         header = '<header xmlns="http://www.openarchives.org/OAI/2.0/">%s</header>'
-        self.subject.add('124', 'oai_dc', bind_string(header % (spec % '2:3' + spec % '3:4')).header)
+        self.subject.add('124', 'oai_dc', parseLxml(header % (spec % '2:3' + spec % '3:4')))
         self.assertEquals('124', self.observer.calledMethods[0].kwargs['identifier'])
         self.assertEquals([('oai_dc', '', "http://www.openarchives.org/OAI/2.0/")], self.observer.calledMethods[0].kwargs['metadataFormats'])
         self.assertEquals(set([('2:3', '2:3'), ('3:4', '3:4')]), self.observer.calledMethods[0].kwargs['sets'])
     
     def testMetadataPrefixes(self):
-        self.subject.add('456', 'oai_dc', bind_string('<oai_dc:dc xmlns:oai_dc="http://oai_dc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
-             xsi:schemaLocation="http://oai_dc http://oai_dc/dc.xsd"/>').dc)
+        self.subject.add('456', 'oai_dc', parseLxml('<oai_dc:dc xmlns:oai_dc="http://oai_dc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
+             xsi:schemaLocation="http://oai_dc http://oai_dc/dc.xsd"/>'))
         self.assertEquals([('oai_dc', 'http://oai_dc/dc.xsd', 'http://oai_dc')], self.observer.calledMethods[0].kwargs['metadataFormats'])
-        self.subject.add('457', 'dc2', bind_string('<oai_dc:dc xmlns:oai_dc="http://dc2"/>').dc)
+        self.subject.add('457', 'dc2', parseLxml('<oai_dc:dc xmlns:oai_dc="http://dc2"/>'))
         self.assertEquals([('dc2', '', 'http://dc2')], self.observer.calledMethods[1].kwargs['metadataFormats'])
 
     def testMetadataPrefixesFromRootTag(self):
-        self.subject.add('456', 'oai_dc', bind_string('<oai_dc:dc xmlns:oai_dc="http://oai_dc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
-             xsi:schemaLocation="http://oai_dc http://oai_dc/dc.xsd"/>'))
+        self.subject.add('456', 'oai_dc', parseLxml('''<oai_dc:dc 
+        xmlns:oai_dc="http://oai_dc" 
+        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+        xsi:schemaLocation="http://other
+                            http://other.com/file.xsd
+                            http://oai_dc 
+                            http://oai_dc/dc.xsd">
+</oai_dc:dc>'''))
         self.assertEquals([('oai_dc', 'http://oai_dc/dc.xsd', 'http://oai_dc')], self.observer.calledMethods[0].kwargs['metadataFormats'])
 
     def testIncompletePrefixInfo(self):
-        self.subject.add('457', 'dc2', bind_string('<oai_dc/>').oai_dc)
+        self.subject.add('457', 'dc2', parseLxml('<oai_dc/>'))
         self.assertEquals([('dc2', '', '')], self.observer.calledMethods[0].kwargs['metadataFormats'])
 
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/oai/oaijazzimplementationstest.py version_1/test/oai/oaijazzimplementationstest.py
--- version_0/test/oai/oaijazzimplementationstest.py	2010-02-25 16:28:04.000000000 +0100
+++ version_1/test/oai/oaijazzimplementationstest.py	2010-02-26 12:04:50.573801376 +0100
@@ -7,7 +7,8 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -31,7 +32,6 @@
 from merescocomponents.facetindex import LuceneIndex
 from os.path import join
 from merescocore.components import StorageComponent
-from amara.binderytools import bind_string
 from time import sleep, mktime
 from StringIO import StringIO
 from lxml.etree import parse
@@ -39,6 +39,8 @@
 
 from merescocomponents.oai import OaiJazz, OaiAddRecord
 
+parseLxml = lambda s: parse(StringIO(s)).getroot()
+
 class OaiJazzImplementationsTest(CQ2TestCase):
     def setUp(self):
         CQ2TestCase.setUp(self)
@@ -81,7 +83,7 @@
 
     def testDeleteIncrementsDatestampAndUnique(self):
         header = '<header xmlns="http://www.openarchives.org/OAI/2.0/"><setSpec>%s</setSpec></header>'
-        self.oaiAddRecord.add('23', 'oai_dc', bind_string(header % 'aSet').header)
+        self.oaiAddRecord.add('23', 'oai_dc', parseLxml(header % 'aSet'))
         stamp = self.jazz.getDatestamp('23')
         unique = self.jazz.getUnique('23')
         sleep(1)
@@ -95,8 +97,8 @@
     
     def testAddSetInfo(self):
         header = '<header xmlns="http://www.openarchives.org/OAI/2.0/"><setSpec>%s</setSpec></header>'
-        self.oaiAddRecord.add('123', 'oai_dc', bind_string(header % 1).header)
-        self.oaiAddRecord.add('124', 'oai_dc', bind_string(header % 2).header)
+        self.oaiAddRecord.add('123', 'oai_dc', parseLxml(header % 1))
+        self.oaiAddRecord.add('124', 'oai_dc', parseLxml(header % 2))
         results = self.jazz.oaiSelect(sets=['1'], prefix='oai_dc')
         self.assertEquals(1, len(list(results)))
         results = self.jazz.oaiSelect(sets=['2'], prefix='oai_dc')
@@ -159,10 +161,10 @@
         self.assertEquals(['id:1'], list(result))
 
     def testAddPartWithUniqueNumbersAndSorting(self):
-        self.oaiAddRecord.add('123', 'oai_dc', bind_string('<oai_dc/>'))
-        self.oaiAddRecord.add('124', 'lom', bind_string('<lom/>'))
-        self.oaiAddRecord.add('121', 'lom', bind_string('<lom/>'))
-        self.oaiAddRecord.add('122', 'lom', bind_string('<lom/>'))
+        self.oaiAddRecord.add('123', 'oai_dc', parseLxml('<oai_dc/>'))
+        self.oaiAddRecord.add('124', 'lom', parseLxml('<lom/>'))
+        self.oaiAddRecord.add('121', 'lom', parseLxml('<lom/>'))
+        self.oaiAddRecord.add('122', 'lom', parseLxml('<lom/>'))
         results = self.jazz.oaiSelect(prefix='oai_dc')
         self.assertEquals(1, len(list(results)))
         results = self.jazz.oaiSelect(prefix='lom')
@@ -281,29 +283,29 @@
         self.assertEquals(['id:%d' % i for i in range(BATCH_SIZE, BATCH_SIZE +5)], recordIds)
 
     def testPreserveRicherPrefixInfo(self):
-        self.oaiAddRecord.add('457', 'oai_dc', bind_string('<oai_dc:dc xmlns:oai_dc="http://oai_dc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
-             xsi:schemaLocation="http://oai_dc http://oai_dc/dc.xsd"/>').dc)
-        self.oaiAddRecord.add('457', 'oai_dc', bind_string('<oai_dc/>'))
+        self.oaiAddRecord.add('457', 'oai_dc', parseLxml('<oai_dc:dc xmlns:oai_dc="http://oai_dc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
+             xsi:schemaLocation="http://oai_dc http://oai_dc/dc.xsd"/>'))
+        self.oaiAddRecord.add('457', 'oai_dc', parseLxml('<oai_dc/>'))
         metadataFormats = set(self.jazz.getAllMetadataFormats())
         self.assertEquals(set([('oai_dc', 'http://oai_dc/dc.xsd', 'http://oai_dc')]), metadataFormats)
 
     def testIncompletePrefixInfo(self):
-        self.oaiAddRecord.add('457', 'dc2', bind_string('<oai_dc/>').oai_dc)
+        self.oaiAddRecord.add('457', 'dc2', parseLxml('<oai_dc/>'))
         metadataFormats = set(self.jazz.getAllMetadataFormats())
         self.assertEquals(set([('dc2', '', '')]), metadataFormats)
 
     def testMetadataPrefixesOnly(self):
-        self.oaiAddRecord.add('456', 'oai_dc', bind_string('<oai_dc:dc xmlns:oai_dc="http://oai_dc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
-             xsi:schemaLocation="http://oai_dc http://oai_dc/dc.xsd"/>').dc)
+        self.oaiAddRecord.add('456', 'oai_dc', parseLxml('<oai_dc:dc xmlns:oai_dc="http://oai_dc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
+             xsi:schemaLocation="http://oai_dc http://oai_dc/dc.xsd"/>'))
         prefixes = set(self.jazz.getAllPrefixes())
         self.assertEquals(set(['oai_dc']), prefixes)
-        self.oaiAddRecord.add('457', 'dc2', bind_string('<oai_dc:dc xmlns:oai_dc="http://dc2"/>').dc)
+        self.oaiAddRecord.add('457', 'dc2', parseLxml('<oai_dc:dc xmlns:oai_dc="http://dc2"/>'))
         prefixes = set(self.jazz.getAllPrefixes())
         self.assertEquals(set(['oai_dc', 'dc2']), prefixes)
         
     def testGetPrefixes(self):
-        self.oaiAddRecord.add('123', 'oai_dc', bind_string('<dc/>').dc)
-        self.oaiAddRecord.add('123', 'lom', bind_string('<lom/>').lom)
+        self.oaiAddRecord.add('123', 'oai_dc', parseLxml('<dc/>'))
+        self.oaiAddRecord.add('123', 'lom', parseLxml('<lom/>'))
         parts = set(self.jazz.getPrefixes('123'))
         self.assertEquals(set(['oai_dc', 'lom']), parts)
         self.assertEquals(['123'], list(self.jazz.oaiSelect(prefix='lom')))
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/oai/oailistmetadataformatstest.py version_1/test/oai/oailistmetadataformatstest.py
--- version_0/test/oai/oailistmetadataformatstest.py	2010-02-25 16:28:04.000000000 +0100
+++ version_1/test/oai/oailistmetadataformatstest.py	2010-02-26 12:04:50.573801376 +0100
@@ -7,7 +7,8 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -27,7 +28,6 @@
 #
 ## end license ##
 from os.path import join
-from amara.binderytools import bind_string
 
 from oaitestcase import OaiTestCase
 from merescocomponents.facetindex import LuceneIndex
@@ -35,9 +35,13 @@
 from merescocomponents.oai import OaiAddRecord, OaiJazz
 from merescocomponents.oai.oailistmetadataformats import OaiListMetadataFormats
 from merescocore.framework import be, Observable
+from lxml.etree import parse
+from StringIO import StringIO
 
 from cq2utils import CallTrace
 
+parseLxml = lambda s: parse(StringIO(s)).getroot()
+
 class OaiListMetadataFormatsTest(OaiTestCase):
 
     def getSubject(self):
@@ -80,10 +84,10 @@
         ))
         self.subject.addObserver(jazz)
         self.request.args = {'verb': ['ListMetadataFormats'], 'identifier': ['id_0']}
-        server.do.add('id_0', 'oai_dc', bind_string("""<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/"
+        server.do.add('id_0', 'oai_dc', parseLxml("""<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-            xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"></oai_dc:dc>""").dc)
-        server.do.add('id_0', 'olac', bind_string('<tag/>').tag)
+            xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"></oai_dc:dc>"""))
+        server.do.add('id_0', 'olac', parseLxml('<tag/>'))
         self.subject.listMetadataFormats(self.request)
         self.assertEqualsWS(self.OAIPMH % """<request identifier="id_0" verb="ListMetadataFormats">http://server:9000/path/to/oai</request>
     <ListMetadataFormats>
Only in version_0/test/oai: xml2documenttest.py
