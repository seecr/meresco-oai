Changeset created on Thu Dec 13 15:24:40 UTC 2012 by Seecr (Seek You Too B.V.)

Description: OAI maximumSuspendedConnections fix

    This patch fixes a bug in maximumSuspendedConnections, where OaiList with
    OaiJazz went busy with themselves.  Now gives a "204 No Content" status code
    to the OAI-Client to indicate a tough situation is occuring on the server side.

Baseline version: 4.1.5

From 4a793a01f6a4f02c60b54e68ce3cc2a9d08549e1 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Thu, 13 Dec 2012 16:20:37 +0100
Subject: [PATCH] JJ/TS: Fixed looping bug with new feature maximumSuspendedConnections in OaiList

---
 deps.txt                   |    2 +-
 meresco/oai/oaijazz.py     |    6 +++++-
 meresco/oai/oailist.py     |    6 +++++-
 test/oaiintegrationtest.py |   42 ++++++++++++++++++++++++++++++++++++++++++
 test/oaijazztest.py        |    4 ++--
 5 files changed, 55 insertions(+), 5 deletions(-)

diff --git a/deps.txt b/deps.txt
index 1f30551..8e9df97 100644
--- a/deps.txt
+++ b/deps.txt
@@ -1,4 +1,4 @@
-python-meresco-components (>= 4.0.25)
+python-meresco-components (>= 4.3.16)
 python-meresco-components (<< 4.4)
 python-meresco-core (>= 4.0)
 python-meresco-core (<< 4.1)
diff --git a/meresco/oai/oaijazz.py b/meresco/oai/oaijazz.py
index 14458bb..92e3285 100644
--- a/meresco/oai/oaijazz.py
+++ b/meresco/oai/oaijazz.py
@@ -221,7 +221,7 @@ class OaiJazz(object):
         if clientIdentifier in self._suspended:
             self._suspended.pop(clientIdentifier).throw(exc_type=ValueError, exc_value=ValueError("Aborting suspended request because of new request for the same OaiClient with identifier: %s." % clientIdentifier), exc_traceback=None)
         if len(self._suspended) == self._maximumSuspendedConnections:
-            self._suspended.pop(choice(self._suspended.keys())).resume()
+            self._suspended.pop(choice(self._suspended.keys())).throw(ForcedResumeException, ForcedResumeException("OAI x-wait connection has been forcefully resumed."), None)
             sys.stderr.write("Too many suspended connections in OaiJazz. One random connection has been resumed.\n")
         self._suspended[clientIdentifier] = suspend
         yield suspend
@@ -433,3 +433,7 @@ def _ensureDir(directory):
     isdir(directory) or makedirs(directory) 
     return directory
 
+
+class ForcedResumeException(Exception):
+    pass
+
diff --git a/meresco/oai/oailist.py b/meresco/oai/oailist.py
index 4baf5e9..1612bbb 100644
--- a/meresco/oai/oailist.py
+++ b/meresco/oai/oailist.py
@@ -31,7 +31,7 @@
 ## end license ##
 
 from weightless.core import Yield
-from meresco.components.http.utils import serverErrorPlainText
+from meresco.components.http.utils import serverErrorPlainText, successNoContentPlainText
 from meresco.core.observable import Observable
 
 from resumptiontoken import resumptionTokenFromString, ResumptionToken
@@ -39,6 +39,7 @@ from oaitool import ISO8601, ISO8601Exception
 from itertools import chain, islice
 from oaiutils import checkNoRepeatedArguments, checkNoMoreArguments, checkArgument, OaiBadArgumentException, oaiFooter, oaiHeader, oaiRequestArgs, OaiException, zuluTime
 from oaierror import oaiError
+from oaijazz import ForcedResumeException
 from uuid import uuid4
 import sys
 
@@ -126,6 +127,9 @@ Error and Exception Conditions
                         sys.stderr.flush()
                     try:
                         yield self.any.suspend(clientIdentifier=clientId)
+                    except ForcedResumeException, e:
+                        yield successNoContentPlainText + str(e)
+                        return
                     except Exception, e:
                         yield serverErrorPlainText + str(e)
                         raise e
diff --git a/test/oaiintegrationtest.py b/test/oaiintegrationtest.py
index bb80426..aafd194 100644
--- a/test/oaiintegrationtest.py
+++ b/test/oaiintegrationtest.py
@@ -28,8 +28,10 @@
 
 from os.path import join
 from random import randint
+from sys import stdout
 from threading import Thread
 from time import sleep
+from urllib2 import urlopen
 from uuid import uuid4
 
 from meresco.core import Observable
@@ -131,6 +133,46 @@ class OaiIntegrationTest(SeecrTestCase):
                 harvestThread1.join()
                 harvestThread2.join()
 
+    def testShouldNotStartToLoopLikeAMadMan(self):
+        self.run = True
+        portNumber = randint(50000, 60000)
+        oaiJazz = OaiJazz(join(self.tempdir, 'oai'), maximumSuspendedConnections=5)
+        storageComponent = StorageComponent(join(self.tempdir, 'storage'))
+
+        def doOaiListRecord(port):
+            header, body = getRequest(port=portNumber, path="/", arguments={"verb": "ListRecords", "metadataPrefix": "prefix", "x-wait": "True"}, parse=False)
+
+        def doUrlOpenWith1SecTimeout(port, basket):
+            try:
+                response = urlopen("http://localhost:%s/?verb=ListRecords&metadataPrefix=prefix&x-wait=True" % port, timeout=0.5)
+            except URLError, e:
+                self.assertTrue('urlopen error timed out>' in str(e), str(e))
+            basket.append(response.getcode())
+
+        oaiPmhThread = Thread(None, lambda: self.startOaiPmh(portNumber, oaiJazz, storageComponent))
+        threads = []
+        todo = [doUrlOpenWith1SecTimeout] * 7
+
+        statusCodes = []
+        oaiPmhThread.start()
+        with stderr_replaced():
+            while todo:
+                func = todo.pop()
+                harvestThread = Thread(None, lambda: func(portNumber, statusCodes))
+                threads.append(harvestThread)
+                harvestThread.start()
+
+            try:
+                while not oaiJazz._suspended:
+                    sleep(0.01)
+            finally:
+                for t in threads:
+                    t.join()
+                self.run = False
+                oaiPmhThread.join()
+
+        self.assertEquals([204] * 2, statusCodes)
+
     def testNearRealtimeOaiSavesState(self):
         observer = CallTrace("observer", ignoredAttributes=["observer_init"], methods={'add': lambda **kwargs: (x for x in [])})
         oaiJazz = OaiJazz(join(self.tempdir, 'oai'))
diff --git a/test/oaijazztest.py b/test/oaijazztest.py
index 7f2fe48..a1b2407 100644
--- a/test/oaijazztest.py
+++ b/test/oaijazztest.py
@@ -40,7 +40,7 @@ from time import time, strptime, sleep
 from calendar import timegm
 
 from meresco.oai import OaiJazz, OaiAddRecord, stamp2zulutime
-from meresco.oai.oaijazz import _flattenSetHierarchy, RecordId, SETSPEC_SEPARATOR
+from meresco.oai.oaijazz import _flattenSetHierarchy, RecordId, SETSPEC_SEPARATOR, ForcedResumeException
 from meresco.oai.oailist import OaiList
 from StringIO import StringIO
 from lxml.etree import parse
@@ -641,7 +641,7 @@ class OaiJazzTest(SeecrTestCase):
         with stderr_replaced() as s:
             suspend2 = jazz.suspend(clientIdentifier="another-client-id").next()
 
-        self.assertRaises(StopIteration, lambda: suspendGen1.next())
+        self.assertRaises(ForcedResumeException, lambda: suspendGen1.next())
         self.assertTrue([True], resumed)
         self.assertEquals(1, len(jazz._suspended))
         self.assertEquals("Too many suspended connections in OaiJazz. One random connection has been resumed.\n", s.getvalue())
-- 
1.7.2.5

