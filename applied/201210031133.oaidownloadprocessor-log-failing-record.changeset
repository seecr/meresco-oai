Changeset created on Wed Oct 03 11:33:11 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Log failed recods in OaiDownloadProcessor

    Failed records will be logged to the error stream with the traceback and the 
    contents of the record.

Baseline version: 4.0.8.1

From b651a248b206406c8b50b87ace78a2c3e180648c Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Wed, 3 Oct 2012 09:12:29 +0100
Subject: [PATCH] JPM/TJ: logging records that cause exceptions.

---
 meresco/oai/oaidownloadprocessor.py |   11 +++++++++--
 test/oaidownloadprocessortest.py    |    6 ++++--
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/meresco/oai/oaidownloadprocessor.py b/meresco/oai/oaidownloadprocessor.py
index 696d015..65c4185 100644
--- a/meresco/oai/oaidownloadprocessor.py
+++ b/meresco/oai/oaidownloadprocessor.py
@@ -7,6 +7,7 @@
 # Copyright (C) 2010 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
 # This file is part of "Meresco Oai"
 # 
@@ -28,7 +29,7 @@
 
 from socket import socket, error as SocketError, SHUT_WR, SHUT_RD, SOL_SOCKET, SO_ERROR
 from errno import EINPROGRESS, ECONNREFUSED
-from lxml.etree import parse, ElementTree
+from lxml.etree import parse, ElementTree, tostring
 from StringIO import StringIO
 from traceback import format_exc
 from os import makedirs, close, remove
@@ -87,7 +88,13 @@ class OaiDownloadProcessor(Observable):
                 header = xpath(item, headerXPath)[0]
                 datestamp = xpath(header, 'oai:datestamp/text()')[0]
                 identifier = xpath(header, 'oai:identifier/text()')[0]
-                yield self.all.add(identifier=identifier, lxmlNode=ElementTree(item), datestamp=datestamp)
+                try:
+                    yield self.all.add(identifier=identifier, lxmlNode=ElementTree(item), datestamp=datestamp)
+                except:
+                    self._logError(format_exc())
+                    self._logError("While processing:")
+                    self._logError(tostring(item))
+                    raise
                 yield # some room for others
             self._resumptionToken = head(xpath(verbNode, "oai:resumptionToken/text()"))
         finally:
diff --git a/test/oaidownloadprocessortest.py b/test/oaidownloadprocessortest.py
index c34a4fe..b52da3d 100644
--- a/test/oaidownloadprocessortest.py
+++ b/test/oaidownloadprocessortest.py
@@ -7,6 +7,7 @@
 # Copyright (C) 2010 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
 # Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
 # This file is part of "Meresco Oai"
 # 
@@ -26,7 +27,6 @@
 # 
 ## end license ##
 
-from __future__ import with_statement
 from contextlib import contextmanager
 from random import randint
 from threading import Event, Thread
@@ -160,7 +160,9 @@ class OaiDownloadProcessorTest(SeecrTestCase):
         self.assertEquals('GET /oai?%s HTTP/1.0\r\n\r\n' % urlencode([('verb', 'ListRecords'), ('resumptionToken', resumptionToken), ('x-wait', 'True')]), oaiDownloadProcessor.buildRequest())
         self.assertRaises(Exception, lambda: list(compose(oaiDownloadProcessor.handle(parse(StringIO(LISTRECORDS_RESPONSE))))))
         self.assertEquals(['add'], [m.name for m in observer.calledMethods])
-        self.assertEquals("", oaiDownloadProcessor._err.getvalue())
+        errorOutput = oaiDownloadProcessor._err.getvalue()
+        self.assertTrue(errorOutput.startswith('Traceback'), errorOutput)
+        self.assertTrue(errorOutput.endswith('Exception: Could be anything\nWhile processing:\n<record xmlns="http://www.openarchives.org/OAI/2.0/"><header><identifier>oai:identifier:1</identifier><datestamp>2011-08-22T07:34:00Z</datestamp></header><metadata>ignored</metadata></record>%s\n  \n'), errorOutput)
         self.assertEquals('GET /oai?%s HTTP/1.0\r\n\r\n' % urlencode([('verb', 'ListRecords'), ('resumptionToken', resumptionToken), ('x-wait', 'True')]), oaiDownloadProcessor.buildRequest())
 
     def testHandleYieldsAtLeastOnceAfterEachRecord(self):
-- 
1.7.1

