Changeset created on Thu Sep 01 13:16:36 CET 2011 by Seecr (Seek You Too B.V.)

Description: Extract datestamp and identifier in download processor 

    To process records in order from multiple oai-server you need the datestamp 
    to define ordering.
    Some small improvents in oaiaddrecord, updateadapter

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-oai/workingsets/3.6.7-Edurep/version_0

diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/oai/oaiaddrecord.py version_1/meresco/oai/oaiaddrecord.py
--- version_0/meresco/oai/oaiaddrecord.py	2011-08-10 11:47:45.000000000 +0200
+++ version_1/meresco/oai/oaiaddrecord.py	2011-08-10 11:51:49.000000000 +0200
@@ -1,31 +1,32 @@
 ## begin license ##
-#
-#    Meresco Oai are components to build Oai repositories, based on Meresco
-#    Core and Meresco Components.
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of Meresco Oai.
-#
-#    Meresco Oai is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Oai is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Oai; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Oai" are components to build Oai repositories, based on
+# "Meresco Core" and "Meresco Components". 
+# 
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Oai"
+# 
+# "Meresco Oai" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Oai" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Oai"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from meresco.core import Transparant
@@ -59,10 +60,10 @@
         return schema, namespace
 
 class OaiAddRecordWithDefaults(Transparant):
-    def __init__(self, metadataFormats=[], sets=[]):
+    def __init__(self, metadataFormats=None, sets=None):
         Transparant.__init__(self)
-        self._metadataFormats = metadataFormats
-        self._sets = sets
+        self._metadataFormats = metadataFormats if metadataFormats else []
+        self._sets = sets if sets else []
         
     def add(self, identifier, partname, lxmlNode):
         self.do.addOaiRecord(identifier=identifier, sets=self._sets, metadataFormats=self._metadataFormats)
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/oai/oaidownloadprocessor.py version_1/meresco/oai/oaidownloadprocessor.py
--- version_0/meresco/oai/oaidownloadprocessor.py	2011-08-10 11:47:45.000000000 +0200
+++ version_1/meresco/oai/oaidownloadprocessor.py	2011-08-22 09:50:40.000000000 +0200
@@ -1,26 +1,29 @@
 ## begin license ##
-#
-#    Meresco Oai are components to build Oai repositories, based on Meresco
-#    Core and Meresco Components.
-#    Copyright (C) 2010 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#
-#    This file is part of Meresco Oai.
-#
-#    Meresco Oai is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Oai is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Oai; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Oai" are components to build Oai repositories, based on
+# "Meresco Core" and "Meresco Components". 
+# 
+# Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2010 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Oai"
+# 
+# "Meresco Oai" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Oai" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Oai"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from socket import socket, error as SocketError, SHUT_WR, SHUT_RD, SOL_SOCKET, SO_ERROR
@@ -76,8 +79,9 @@
             else:
                 records = xpath(lxmlNode, '/oai:OAI-PMH/oai:ListRecords/oai:record')
                 for record in records:
-                    self.do.add(lxmlNode=ElementTree(record))
-                    yield
+                    datestamp = xpath(record, 'oai:header/oai:datestamp/text()')[0]
+                    identifier = xpath(record, 'oai:header/oai:identifier/text()')[0]
+                    yield self.asyncdo.add(identifier=identifier, lxmlNode=ElementTree(record), datestamp=datestamp)
                 self._resumptionToken = head(xpath(lxmlNode, "/oai:OAI-PMH/oai:ListRecords/oai:resumptionToken/text()"))
         finally:
             self._writeState()
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/oai/updateadapter.py version_1/meresco/oai/updateadapter.py
--- version_0/meresco/oai/updateadapter.py	2011-08-10 11:47:45.000000000 +0200
+++ version_1/meresco/oai/updateadapter.py	2011-08-22 10:01:41.000000000 +0200
@@ -1,26 +1,28 @@
 ## begin license ##
-#
-#    Meresco Oai are components to build Oai repositories, based on Meresco
-#    Core and Meresco Components.
-#    Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of Meresco Oai.
-#
-#    Meresco Oai is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Oai is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Oai; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Oai" are components to build Oai repositories, based on
+# "Meresco Core" and "Meresco Components". 
+# 
+# Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Oai"
+# 
+# "Meresco Oai" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Oai" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Oai"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from meresco.core import Observable
@@ -32,14 +34,9 @@
 
 class UpdateAdapterFromOaiDownloadProcessor(Observable):
 
-    def add(self, lxmlNode):
-        header = xpath(lxmlNode, '/oai:record/oai:header')
-        if not header:
-            raise ValueError("Expected /{%(oai)s}record/{%(oai)s}header" % namespaces)
-        header = header[0]
-        identifier = xpath(header, 'oai:identifier/text()')[0]
+    def add(self, identifier, lxmlNode, datestamp):
         __callstack_var_identifier = identifier
-        if xpath(header, 'self::node()[@status="deleted"]'):
+        if xpath(lxmlNode, '/oai:record/oai:header[@status="deleted"]'):
             return self.all.delete(identifier=identifier)
         else:
             return self.all.add(identifier=identifier, partname='record', lxmlNode=lxmlNode)
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/oaidownloadprocessortest.py version_1/test/oaidownloadprocessortest.py
--- version_0/test/oaidownloadprocessortest.py	2011-08-10 11:47:45.000000000 +0200
+++ version_1/test/oaidownloadprocessortest.py	2011-08-22 09:56:10.000000000 +0200
@@ -1,26 +1,29 @@
 ## begin license ##
-#
-#    Meresco Oai are components to build Oai repositories, based on Meresco
-#    Core and Meresco Components.
-#    Copyright (C) 2010 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#
-#    This file is part of Meresco Oai.
-#
-#    Meresco Oai is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Oai is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Oai; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Oai" are components to build Oai repositories, based on
+# "Meresco Core" and "Meresco Components". 
+# 
+# Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2010 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Oai"
+# 
+# "Meresco Oai" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Oai" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Oai"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from __future__ import with_statement
@@ -39,6 +42,7 @@
 from meresco.components.http.utils import CRLF
 from meresco.oai import OaiDownloadProcessor
 
+from weightless.core import compose
 
 class OaiDownloadProcessorTest(CQ2TestCase):
     def testRequest(self):
@@ -49,20 +53,36 @@
         observer = CallTrace()
         oaiDownloadProcessor = OaiDownloadProcessor(path="/oai", metadataPrefix="oai_dc", workingDirectory=self.tempdir, xWait=True)
         oaiDownloadProcessor.addObserver(observer)
-        list(oaiDownloadProcessor.handle(parse(StringIO(LISTRECORDS_RESPONSE % ''))))
+        list(compose(oaiDownloadProcessor.handle(parse(StringIO(LISTRECORDS_RESPONSE % '')))))
         self.assertEquals(['add'], [m.name for m in observer.calledMethods])
         self.assertEquals(0, len(observer.calledMethods[0].args))
         self.assertEqualsWS(ONE_RECORD, tostring(observer.calledMethods[0].kwargs['lxmlNode']))
+        self.assertEquals('2011-08-22T07:34:00Z', observer.calledMethods[0].kwargs['datestamp'])
+        self.assertEquals('oai:identifier:1', observer.calledMethods[0].kwargs['identifier'])
 
     def testHandleWithTwoRecords(self): 
         observer = CallTrace()
         oaiDownloadProcessor = OaiDownloadProcessor(path="/oai", metadataPrefix="oai_dc", workingDirectory=self.tempdir, xWait=True)
         oaiDownloadProcessor.addObserver(observer)
-        list(oaiDownloadProcessor.handle(parse(StringIO(LISTRECORDS_RESPONSE % '<record>another record</record>'))))
+        secondRecord = '<record xmlns="http://www.openarchives.org/OAI/2.0/"><header><identifier>oai:identifier:2</identifier><datestamp>2011-08-22T07:41:00Z</datestamp></header><metadata>ignored</metadata></record>'
+        list(compose(oaiDownloadProcessor.handle(parse(StringIO(LISTRECORDS_RESPONSE % secondRecord)))))
         self.assertEquals(['add', 'add'], [m.name for m in observer.calledMethods])
         self.assertEquals(0, len(observer.calledMethods[0].args))
         self.assertEqualsWS(ONE_RECORD, tostring(observer.calledMethods[0].kwargs['lxmlNode']))
-        self.assertEqualsWS('<record xmlns="http://www.openarchives.org/OAI/2.0/">another record</record>', tostring(observer.calledMethods[1].kwargs['lxmlNode']))
+        self.assertEquals('2011-08-22T07:34:00Z', observer.calledMethods[0].kwargs['datestamp'])
+        self.assertEquals('oai:identifier:1', observer.calledMethods[0].kwargs['identifier'])
+        self.assertEqualsWS(secondRecord, tostring(observer.calledMethods[1].kwargs['lxmlNode']))
+        self.assertEquals('2011-08-22T07:41:00Z', observer.calledMethods[1].kwargs['datestamp'])
+        self.assertEquals('oai:identifier:2', observer.calledMethods[1].kwargs['identifier'])
+
+    def testRaiseErrorOnBadArguments(self):
+        oaiDownloadProcessor = OaiDownloadProcessor(path="/oai", metadataPrefix="oai_dc", workingDirectory=self.tempdir, xWait=True)
+        badRecord = '<record>No Header</record>'
+        try:
+            list(compose(oaiDownloadProcessor.handle(parse(StringIO(LISTRECORDS_RESPONSE % badRecord)))))
+            self.fail()
+        except IndexError:
+            pass
 
     def testListRecordsRequestError(self):
         resumptionToken = "u|c1286437597991025|mprefix|s|f"
@@ -110,13 +130,13 @@
         oaiDownloadProcessor = OaiDownloadProcessor(path="/oai", metadataPrefix="oai_dc", workingDirectory=self.tempdir, xWait=True, err=StringIO())
         oaiDownloadProcessor.addObserver(observer)
         self.assertEquals('GET /oai?%s HTTP/1.0\r\n\r\n' % urlencode([('verb', 'ListRecords'), ('resumptionToken', resumptionToken), ('x-wait', 'True')]), oaiDownloadProcessor.buildRequest())
-        self.assertRaises(Exception, lambda: list(oaiDownloadProcessor.handle(parse(StringIO(LISTRECORDS_RESPONSE)))))
+        self.assertRaises(Exception, lambda: list(compose(oaiDownloadProcessor.handle(parse(StringIO(LISTRECORDS_RESPONSE))))))
         self.assertEquals(['add'], [m.name for m in observer.calledMethods])
         self.assertEquals("", oaiDownloadProcessor._err.getvalue())
         self.assertEquals('GET /oai?%s HTTP/1.0\r\n\r\n' % urlencode([('verb', 'ListRecords'), ('resumptionToken', resumptionToken), ('x-wait', 'True')]), oaiDownloadProcessor.buildRequest())
 
 
-ONE_RECORD = '<record xmlns="http://www.openarchives.org/OAI/2.0/">ignored</record>'
+ONE_RECORD = '<record xmlns="http://www.openarchives.org/OAI/2.0/"><header><identifier>oai:identifier:1</identifier><datestamp>2011-08-22T07:34:00Z</datestamp></header><metadata>ignored</metadata></record>'
 
 LISTRECORDS_RESPONSE = """<?xml version="1.0" encoding="UTF-8" ?>
 <OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/">
@@ -124,11 +144,10 @@
   <request verb="ListRecords" from="1998-01-15" 
            metadataPrefix="dc">http://an.oa.org/OAI-script</request>
   <ListRecords>
-    <record>ignored</record>
     %s
   </ListRecords>
 </OAI-PMH>
-"""
+""" % (ONE_RECORD+"%s")
 
 ERROR_RESPONSE = """<?xml version="1.0" encoding="UTF-8" ?>
 <OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/" 
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/updateadaptertest.py version_1/test/updateadaptertest.py
--- version_0/test/updateadaptertest.py	2011-08-10 11:47:45.000000000 +0200
+++ version_1/test/updateadaptertest.py	2011-08-22 10:01:41.000000000 +0200
@@ -1,27 +1,30 @@
 ## begin license ##
-#
-#    Meresco Oai are components to build Oai repositories, based on Meresco
-#    Core and Meresco Components.
-#    Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of Meresco Oai.
-#
-#    Meresco Oai is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Meresco Oai is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Meresco Oai; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Oai" are components to build Oai repositories, based on
+# "Meresco Core" and "Meresco Components". 
+# 
+# Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Oai"
+# 
+# "Meresco Oai" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Oai" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Oai"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from cq2utils import CQ2TestCase, CallTrace
 
 from lxml.etree import parse
@@ -35,7 +38,7 @@
         observer = CallTrace('observer')
         adapter.addObserver(observer)
 
-        list(adapter.add(lxmlNode=parse(StringIO(OAI_DELETED_RECORD))))
+        list(adapter.add(identifier='oai:test:identifier', lxmlNode=parse(StringIO(OAI_DELETED_RECORD)), datestamp="2010-10-19T09:57:32Z"))
 
         self.assertEquals(['delete'], [m.name for m in observer.calledMethods])
         self.assertEquals({'identifier':'oai:test:identifier'}, observer.calledMethods[0].kwargs)
@@ -46,7 +49,7 @@
         adapter.addObserver(observer)
 
         recordNode = parse(StringIO(OAI_RECORD))
-        list(adapter.add(lxmlNode=recordNode))
+        list(adapter.add(identifier='oai:test:identifier', lxmlNode=recordNode, datestamp="2010-10-19T09:57:32Z"))
 
         self.assertEquals(['add'], [m.name for m in observer.calledMethods])
         kwargs = observer.calledMethods[0].kwargs
@@ -54,13 +57,6 @@
             'partname': 'record',
             'lxmlNode': recordNode}, kwargs)
 
-    def testRaiseErrorOnBadArguments(self):
-        adapter = UpdateAdapterFromOaiDownloadProcessor()
-        observer = CallTrace('observer')
-        adapter.addObserver(observer)
-
-        self.assertRaises(ValueError, adapter.add, lxmlNode=parse(StringIO('<nooairecord/>')))
-
 
 OAI_DELETED_RECORD = """<oai:record xmlns:oai="http://www.openarchives.org/OAI/2.0/">
     <oai:header status="deleted">
