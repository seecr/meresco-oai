Changeset created on Tue Oct 02 08:00:37 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Unicode support for OaiJazz

    The main 'database' OaiJazz now supports unicode objects, by converting them to strings.

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-oai/workingsets/4.0.7-BNL/version_0

diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude='*.swp' --exclude=deps.d --exclude=applied version_0/meresco/oai/oaijazz.py /home/zp/development/meresco-oai/workingsets/4.0.7-BNL/version_1/meresco/oai/oaijazz.py
--- version_0/meresco/oai/oaijazz.py	2012-10-02 08:10:29.000000000 +0100
+++ version_1/meresco/oai/oaijazz.py	2012-10-02 09:00:35.000000000 +0100
@@ -11,6 +11,7 @@
 # Copyright (C) 2009 Tilburg University http://www.uvt.nl
 # Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
 # This file is part of "Meresco Oai"
 # 
@@ -71,7 +72,7 @@
         self._suspended = []
         self._deletePrefixes = alwaysDeleteInPrefixes or []
         self._preciseDatestamp = preciseDatestamp
-        self._persitentDelete = persistentDelete
+        self._persistentDelete = persistentDelete
 
         self._name = name
 
@@ -81,6 +82,7 @@
     def addOaiRecord(self, identifier, sets=None, metadataFormats=None):
         if not identifier:
             raise ValueError("Empty identifier not allowed.")
+        identifier = safeString(identifier)
         sets = sets or []
         metadataFormats = metadataFormats or []
         assert [prefix for prefix, schema, namespace in metadataFormats], 'No metadataFormat specified for record with identifier "%s"' % identifier
@@ -100,6 +102,7 @@
     def delete(self, identifier):
         if not identifier:
             raise ValueError("Empty identifier not allowed.")
+        identifier = safeString(identifier)
         oldPrefixes, oldSets = self._purge(identifier)
         if not oldPrefixes and not self._deletePrefixes:
             return
@@ -157,6 +160,7 @@
         return self._prefixes.keys()
 
     def getSets(self, identifier):
+        identifier = safeString(identifier)
         if identifier not in self._identifier2setSpecs:
             return []
         return self._identifier2setSpecs[identifier].split(SETSPEC_SEPARATOR)
@@ -179,7 +183,7 @@
             return stampIds[-1] if stampIds else None
 
     def getDeletedRecordType(self):
-        return "persistent" if self._persitentDelete else "transient"
+        return "persistent" if self._persistentDelete else "transient"
 
     def suspend(self):
         suspend = Suspend()
@@ -256,15 +260,15 @@
         return self._stamp2identifier.get(str(stamp), None)
 
     def _getStamp(self, identifier):
-        result = self._stamp2identifier.getKeyFor(identifier)
+        result = self._stamp2identifier.getKeyFor(safeString(identifier))
         if result != None:
             result = int(result)
         return result
 
     def purge(self, identifier):
-        if self._persitentDelete:
+        if self._persistentDelete:
             raise KeyError("Purging of records is not allowed with persistent deletes.")
-        self._purge(identifier)
+        self._purge(safeString(identifier))
 
     def _purge(self, identifier):
         stamp = self.getUnique(identifier)
@@ -342,3 +346,5 @@
             result.add(':'.join(parts[:i]))
     return result
 
+def safeString(aString):
+    return str(aString) if isinstance(aString, unicode) else aString
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude='*.swp' --exclude=deps.d --exclude=applied version_0/test/oaijazztest.py /home/zp/development/meresco-oai/workingsets/4.0.7-BNL/version_1/test/oaijazztest.py
--- version_0/test/oaijazztest.py	2012-10-02 08:10:29.000000000 +0100
+++ version_1/test/oaijazztest.py	2012-10-02 09:00:35.000000000 +0100
@@ -11,6 +11,7 @@
 # Copyright (C) 2009 Tilburg University http://www.uvt.nl
 # Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
 # Copyright (C) 2011-2012 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2012 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
 # 
 # This file is part of "Meresco Oai"
 # 
@@ -208,6 +209,23 @@
         jazz2 = OaiJazz(self.tempdir)
         self.assertEquals(['42'], list(jazz2.oaiSelect(prefix='prefix', sets=['setSpec'])))
 
+    def testUnicodeIdentifier(self):
+        self.jazz.addOaiRecord(u'ë', metadataFormats=[('prefix','schema', 'namespace')], sets=[('setSpec', 'setName')])
+        jazz2 = OaiJazz(self.tempdir)
+        self.assertEquals(['ë'], list(jazz2.oaiSelect(prefix='prefix', sets=['setSpec'])))
+        self.assertFalse(jazz2.isDeleted(u'ë'))
+        list(compose(jazz2.delete(u'ë')))
+        self.assertTrue(jazz2.isDeleted('ë'))
+        self.assertTrue(jazz2.isDeleted(u'ë'))
+        self.assertNotEquals(None, jazz2.getDatestamp(u'ë'))
+        self.assertNotEquals(None, jazz2.getUnique(u'ë'))
+        self.assertEquals(['setSpec'], jazz2.getSets(u'ë'))
+        self.assertEquals(['prefix'], list(jazz2.getPrefixes(u'ë')))
+
+        jazz3 = OaiJazz(self.tempdir, persistentDelete=False)
+        jazz3.purge(u'ë')
+        self.assertEquals([], list(jazz3.oaiSelect(prefix='prefix', sets=['setSpec'])))
+
     def testWeirdSetOrPrefixNamesDoNotMatter(self):
         self.jazz.addOaiRecord('42', metadataFormats=[('/%^!@#$   \n\t','schema', 'namespace')], sets=[('set%2Spec\n\n', 'setName')])
         jazz2 = OaiJazz(self.tempdir)
