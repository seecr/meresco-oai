Changeset created on Fri Jan 20 11:33:25 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Disallow empty identifiers in OaiJazz addOaiRecord and delete

    Calling addOaiRecord and delete on OaiJazz will raise a ValueError

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-oai/tags/version_3.6.15

diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_3.6.15/meresco/oai/oaijazz.py /vol/extra_disk/development/meresco-oai/tags/version_3.6.16/meresco/oai/oaijazz.py
--- version_3.6.15/meresco/oai/oaijazz.py	2012-01-20 12:19:26.000000000 +0100
+++ version_3.6.16/meresco/oai/oaijazz.py	2012-01-20 12:31:29.000000000 +0100
@@ -71,8 +71,10 @@
         self._preciseDatestamp = preciseDatestamp
 
     def addOaiRecord(self, identifier, sets=None, metadataFormats=None):
-        sets = [] if sets == None else sets
-        metadataFormats = [] if metadataFormats == None else metadataFormats
+        if not identifier:
+            raise ValueError("Empty identifier not allowed.")
+        sets = sets or []
+        metadataFormats = metadataFormats or []
         assert [prefix for prefix, schema, namespace in metadataFormats], 'No metadataFormat specified for record with identifier "%s"' % identifier
         for setSpec, setName in sets:
             assert SETSPEC_SEPARATOR not in setSpec, 'SetSpec "%s" contains illegal characters' % setSpec
@@ -87,6 +89,8 @@
         self._resume()
 
     def delete(self, identifier):
+        if not identifier:
+            raise ValueError("Empty identifier not allowed.")
         oldPrefixes, oldSets = self._delete(identifier)
         if not oldPrefixes and not self._deletePrefixes:
             return
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_3.6.15/test/oaijazztest.py /vol/extra_disk/development/meresco-oai/tags/version_3.6.16/test/oaijazztest.py
--- version_3.6.15/test/oaijazztest.py	2012-01-20 12:19:25.000000000 +0100
+++ version_3.6.16/test/oaijazztest.py	2012-01-20 12:30:51.000000000 +0100
@@ -76,6 +76,10 @@
         recordIds = myJazz.oaiSelect(prefix='prefix')
         self.assertEquals('oai://1234?34', recordIds.next())
 
+    def testAddOaiRecordEmptyIdentifier(self):
+        self.assertRaises(ValueError, lambda: self.jazz.addOaiRecord("", metadataFormats=[('prefix', 'schema', 'namespace')]))
+        self.assertRaises(ValueError, lambda: self.jazz.addOaiRecord(None, metadataFormats=[('prefix', 'schema', 'namespace')]))
+
     def xtestPerformanceTestje(self):
         t0 = time()
         lastTime = t0
@@ -135,6 +139,10 @@
         jazz2 = OaiJazz(self.tempdir)
         self.assertEquals(None, jazz2.getUnique('notExisting'))
 
+    def testDeleteEmptyIdentifier(self):
+        self.assertRaises(ValueError, lambda: self.jazz.delete(""))
+        self.assertRaises(ValueError, lambda: self.jazz.delete(None))
+
     def testMarkDeleteOfNonExistingRecordInGivenPrefixes(self):
         self.jazz.addOaiRecord('existing', metadataFormats=[('prefix','schema', 'namespace')])
         jazz = OaiJazz(self.tempdir, alwaysDeleteInPrefixes=["aprefix"])
