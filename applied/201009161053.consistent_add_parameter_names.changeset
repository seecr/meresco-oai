Changeset created on Thu Sep 16 10:53:19 CEST 2010 by Seek You Too

Description: Consistant usage of args and kwargs in add calls

   The usage of args and kwargs with add calls has been normalized throughout Meresco. Therefore the meresco-oai code
   has been made compliant with this new practice.

Baseline version: meresco-oai/workingsets/3.1.1-CQ2/version_0

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified MO3.1.1/meresco/oai/oaiaddrecord.py MO3.1.1-0/meresco/oai/oaiaddrecord.py
--- MO3.1.1/meresco/oai/oaiaddrecord.py	2010-09-16 09:18:42.000000000 +0200
+++ MO3.1.1-0/meresco/oai/oaiaddrecord.py	2010-09-06 14:04:01.000000000 +0200
@@ -37,8 +37,8 @@
 }
 
 class OaiAddRecord(Transparant):
-    def add(self, id, partName, record):
-        record = record if iselement(record) else record.getroot()
+    def add(self, identifier, partname, lxmlNode):
+        record = lxmlNode if iselement(lxmlNode) else lxmlNode.getroot()
         setSpecs = record.xpath('/oai:header/oai:setSpec/text()', namespaces=namespaces)
         sets = set((str(s), str(s)) for s in setSpecs)
         
@@ -46,10 +46,10 @@
         schemaLocations = record.xpath('@xsi:schemaLocation', namespaces=namespaces)
         ns2xsd = ''.join(schemaLocations).split()
         schema = dict(zip(ns2xsd[::2],ns2xsd[1::2])).get(namespace, '')
-        schema, namespace = self._magicSchemaNamespace(record.prefix, partName, schema, namespace)
-        metadataFormats=[(partName, schema, namespace)]
+        schema, namespace = self._magicSchemaNamespace(record.prefix, partname, schema, namespace)
+        metadataFormats=[(partname, schema, namespace)]
 
-        self.do.addOaiRecord(identifier=id, sets=sets, metadataFormats=metadataFormats)
+        self.do.addOaiRecord(identifier=identifier, sets=sets, metadataFormats=metadataFormats)
 
     def _magicSchemaNamespace(self, prefix, name, schema, namespace):
         searchForPrefix = prefix or name
@@ -64,6 +64,6 @@
         self._metadataFormats = metadataFormats
         self._sets = sets
         
-    def add(self, id, name, record):
-        self.do.addOaiRecord(identifier=id, sets=self._sets, metadataFormats=self._metadataFormats)
+    def add(self, identifier, partname, lxmlNode):
+        self.do.addOaiRecord(identifier=identifier, sets=self._sets, metadataFormats=self._metadataFormats)
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified MO3.1.1/test/oailistmetadataformatstest.py MO3.1.1-0/test/oailistmetadataformatstest.py
--- MO3.1.1/test/oailistmetadataformatstest.py	2010-09-16 09:18:42.000000000 +0200
+++ MO3.1.1-0/test/oailistmetadataformatstest.py	2010-09-06 13:59:13.000000000 +0200
@@ -84,10 +84,10 @@
         ))
         self.subject.addObserver(jazz)
         self.request.args = {'verb': ['ListMetadataFormats'], 'identifier': ['id_0']}
-        server.do.add('id_0', 'oai_dc', parseLxml("""<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/"
+        server.do.add(identifier='id_0', partname='oai_dc', lxmlNode=parseLxml("""<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"></oai_dc:dc>"""))
-        server.do.add('id_0', 'olac', parseLxml('<tag/>'))
+        server.do.add(identifier='id_0', partname='olac', lxmlNode=parseLxml('<tag/>'))
         self.subject.listMetadataFormats(self.request)
         self.assertEqualsWS(self.OAIPMH % """<request identifier="id_0" verb="ListMetadataFormats">http://server:9000/path/to/oai</request>
     <ListMetadataFormats>
