Changeset created on Tue Dec 11 13:09:39 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Only allow by default 100 suspended connections in OaiJazz

    If more than the maximumSuspendedConnections will be created, a random 
    suspended object will be resumed. This will only occur if OAI clients are 
    not using the X-Meresco-Oai-Client-Identifier HTTP header.

Baseline version: origin/master

From 0e7ec92618881e76e57c12bebbad3d9d47a70759 Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Tue, 11 Dec 2012 13:54:11 +0100
Subject: [PATCH 1/2] TS/HM: Only allow (by default 100) a maximum of suspended connections for oaiJazz

If too many suspended object are created, we will randomly resume one suspended connection
---
 meresco/oai/oaijazz.py |    8 ++++++--
 test/oaijazztest.py    |   13 +++++++++++++
 2 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/meresco/oai/oaijazz.py b/meresco/oai/oaijazz.py
index b3abcf9..8284d03 100644
--- a/meresco/oai/oaijazz.py
+++ b/meresco/oai/oaijazz.py
@@ -40,6 +40,7 @@ from calendar import timegm
 from json import dumps, load as jsonLoad
 from bsddb import btopen
 from traceback import print_exc
+from random import choice
 
 from escaping import escapeFilename, unescapeFilename
 from meresco.components.sorteditertools import OrIterator, AndIterator
@@ -56,12 +57,13 @@ class OaiJazz(object):
 
     version = '3'
 
-    def __init__(self, aDirectory, alwaysDeleteInPrefixes=None, preciseDatestamp=False, persistentDelete=True, name=None):
+    def __init__(self, aDirectory, alwaysDeleteInPrefixes=None, preciseDatestamp=False, persistentDelete=True, maximumSuspendedConnections=100, name=None):
         self._directory = _ensureDir(aDirectory)
         self._versionFormatCheck()
         self._deletePrefixes = alwaysDeleteInPrefixes or []
         self._preciseDatestamp = preciseDatestamp
         self._persistentDelete = persistentDelete
+        self._maximumSuspendedConnections = maximumSuspendedConnections
         self._name = name
         self._suspended = {}
 
@@ -217,7 +219,9 @@ class OaiJazz(object):
         suspend = Suspend()
         if clientIdentifier in self._suspended:
             self._suspended.pop(clientIdentifier).throw(exc_type=ValueError, exc_value=ValueError("Aborting suspended request because of new request for the same OaiClient with identifier: %s." % clientIdentifier), exc_traceback=None)
-        self._suspended[clientIdentifier] = suspend 
+        if len(self._suspended) == self._maximumSuspendedConnections:
+            self._suspended.pop(choice(self._suspended.keys())).resume()
+        self._suspended[clientIdentifier] = suspend
         yield suspend
         suspend.getResult()
 
diff --git a/test/oaijazztest.py b/test/oaijazztest.py
index 2ee3575..5039c9a 100644
--- a/test/oaijazztest.py
+++ b/test/oaijazztest.py
@@ -631,6 +631,19 @@ class OaiJazzTest(SeecrTestCase):
             self.assertTrue([True], resumed)
             self.assertEquals("Aborting suspended request because of new request for the same OaiClient with identifier: a-client-id.", str(e))
 
+    def testShouldResumeAPreviousSuspendAfterTooManySuspends(self):
+        reactor = CallTrace("reactor")
+        resumed = []
+        jazz = OaiJazz(self.tempdir, maximumSuspendedConnections=1)
+        suspendGen1 = jazz.suspend(clientIdentifier="a-client-id")
+        suspend1 = suspendGen1.next()
+        suspend1(reactor, lambda: resumed.append(True))
+        suspend2 = jazz.suspend(clientIdentifier="another-client-id").next()
+
+        self.assertRaises(StopIteration, lambda: suspendGen1.next())
+        self.assertTrue([True], resumed)
+        self.assertEquals(1, len(jazz._suspended))
+
     def testAddOaiRecordResumes(self):
         reactor = CallTrace("reactor")
         suspend = self.jazz.suspend(clientIdentifier="a-client-id").next()
-- 
1.7.2.5


From 5c741d4b0943d071aeab5b94df06753607a158a0 Mon Sep 17 00:00:00 2001
From: Hendrik Moree <hendrik@seecr.nl>
Date: Tue, 11 Dec 2012 14:02:36 +0100
Subject: [PATCH 2/2] TS/HM: Print error message if too many suspended connetions found

---
 meresco/oai/oaijazz.py |    2 ++
 test/oaijazztest.py    |    4 +++-
 2 files changed, 5 insertions(+), 1 deletions(-)

diff --git a/meresco/oai/oaijazz.py b/meresco/oai/oaijazz.py
index 8284d03..14458bb 100644
--- a/meresco/oai/oaijazz.py
+++ b/meresco/oai/oaijazz.py
@@ -31,6 +31,7 @@
 # 
 ## end license ##
 
+import sys
 from sys import maxint
 from os.path import isdir, join, isfile
 from os import makedirs, listdir, rename, remove
@@ -221,6 +222,7 @@ class OaiJazz(object):
             self._suspended.pop(clientIdentifier).throw(exc_type=ValueError, exc_value=ValueError("Aborting suspended request because of new request for the same OaiClient with identifier: %s." % clientIdentifier), exc_traceback=None)
         if len(self._suspended) == self._maximumSuspendedConnections:
             self._suspended.pop(choice(self._suspended.keys())).resume()
+            sys.stderr.write("Too many suspended connections in OaiJazz. One random connection has been resumed.\n")
         self._suspended[clientIdentifier] = suspend
         yield suspend
         suspend.getResult()
diff --git a/test/oaijazztest.py b/test/oaijazztest.py
index 5039c9a..7f2fe48 100644
--- a/test/oaijazztest.py
+++ b/test/oaijazztest.py
@@ -638,11 +638,13 @@ class OaiJazzTest(SeecrTestCase):
         suspendGen1 = jazz.suspend(clientIdentifier="a-client-id")
         suspend1 = suspendGen1.next()
         suspend1(reactor, lambda: resumed.append(True))
-        suspend2 = jazz.suspend(clientIdentifier="another-client-id").next()
+        with stderr_replaced() as s:
+            suspend2 = jazz.suspend(clientIdentifier="another-client-id").next()
 
         self.assertRaises(StopIteration, lambda: suspendGen1.next())
         self.assertTrue([True], resumed)
         self.assertEquals(1, len(jazz._suspended))
+        self.assertEquals("Too many suspended connections in OaiJazz. One random connection has been resumed.\n", s.getvalue())
 
     def testAddOaiRecordResumes(self):
         reactor = CallTrace("reactor")
-- 
1.7.2.5

