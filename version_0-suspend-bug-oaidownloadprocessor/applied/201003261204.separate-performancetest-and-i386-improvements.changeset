Changeset created on Fri Mar 26 12:04:34 CET 2010 by Seek You Too

Description: Separated performancetest and added more i386 awareness.

    The performance test is now separated from the alltests.

    More tests are aware of the operating system architecture, because
    sizes can differ between 32 and 64 bits machines.

Baseline version: meresco-components/tags/version_2.23.5

diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/merescocomponents/oai/oaijazz.py version_1/merescocomponents/oai/oaijazz.py
--- version_0/merescocomponents/oai/oaijazz.py	2010-03-25 17:11:27.000000000 +0100
+++ version_1/merescocomponents/oai/oaijazz.py	2010-03-26 12:01:35.000000000 +0100
@@ -36,6 +36,7 @@
 from itertools import ifilter, dropwhile, takewhile, chain
 from merescocomponents.sorteditertools import OrIterator, AndIterator, WrapIterable
 from merescocomponents import SortedFileList, DoubleUniqueBerkeleyDict, BerkeleyDict
+from sys import maxint
 
 from bisect import bisect_left
 
@@ -168,13 +169,21 @@
     def _fromTime(self, oaiFrom):
         if not oaiFrom:
             return 0
-        return int(mktime(strptime(oaiFrom, '%Y-%m-%dT%H:%M:%SZ'))*1000000.0)
+        return self._timeToNumber(oaiFrom)
 
     def _untilTime(self, oaiUntil):
         if not oaiUntil:
             return None
         UNTIL_IS_INCLUSIVE = 1 # Add one second to 23:59:59
-        return int(mktime(strptime(oaiUntil, '%Y-%m-%dT%H:%M:%SZ'))*1000000.0) + UNTIL_IS_INCLUSIVE
+        return self._timeToNumber(oaiUntil) + UNTIL_IS_INCLUSIVE
+
+    @staticmethod
+    def _timeToNumber(time):
+        try:
+            return int(mktime(strptime(time, '%Y-%m-%dT%H:%M:%SZ'))*1000000.0)
+        except (ValueError, OverflowError):
+            return maxint * 1000000
+
 
     def _getIdentifier(self, stamp):
         return self._stamp2identifier.get(str(stamp), None)
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/alltests.py version_1/test/alltests.py
--- version_0/test/alltests.py	2010-03-25 17:11:27.000000000 +0100
+++ version_1/test/alltests.py	2010-03-26 12:01:35.000000000 +0100
@@ -9,7 +9,7 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -29,15 +29,17 @@
 #
 ## end license ##
 
-import os, sys
-os.system('find .. -name "*.pyc" | xargs rm -f')
+from os import getuid
+assert getuid() != 0, "Do not run tests as 'root'"
 
-import test
-
-from glob import glob
-for path in glob('../deps.d/*'):
-    sys.path.insert(0, path)
-sys.path.insert(0,'..')
+from os import system                             #DO_NOT_DISTRIBUTE
+from sys import path as sysPath                   #DO_NOT_DISTRIBUTE
+system('find .. -name "*.pyc" | xargs rm -f')     #DO_NOT_DISTRIBUTE
+                                                  #DO_NOT_DISTRIBUTE
+from glob import glob                             #DO_NOT_DISTRIBUTE
+for path in glob('../deps.d/*'):                  #DO_NOT_DISTRIBUTE
+    sysPath.insert(0, path)                       #DO_NOT_DISTRIBUTE
+sysPath.insert(0,'..')                            #DO_NOT_DISTRIBUTE
 
 import unittest
 
@@ -47,7 +49,6 @@
 from packertest import PackerTest
 
 from facetindex.libfacetindextest import LibFacetIndexTest
-from facetindex.performancetuningtest import PerformanceTuningTest
 from facetindex.docsettest import DocSetTest
 from facetindex.docsetlisttest import DocSetListTest
 from facetindex.trietest import TrieTest
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/facetindex/drilldowntest.py version_1/test/facetindex/drilldowntest.py
--- version_0/test/facetindex/drilldowntest.py	2010-03-25 17:11:27.000000000 +0100
+++ version_1/test/facetindex/drilldowntest.py	2010-03-26 12:01:35.000000000 +0100
@@ -8,7 +8,7 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -40,6 +40,8 @@
 from merescocomponents.facetindex.docset import DocSet
 from merescocomponents.facetindex.docsetlist import DocSetList, JACCARD_ONLY
 
+MACHINEBITS = calcsize('P') * 8
+
 class DrilldownTest(CQ2TestCase):
 
     def setUp(self):
@@ -213,7 +215,8 @@
         docSetList_for_title = CallTrace('DocSetList')
         drilldown._docsetlists['title'] = docSetList_for_title
         list(drilldown.jaccard(None, [("title", 17, 67)], maxTermFreqPercentage=80))
-        self.assertEquals("[jaccards(None, 17, 67, 78, algorithm=<class c_int>, maxTermFreqPercentage=80)]", str(docSetList_for_title.calledMethods))
+        algorithm = '<class c_int>' if MACHINEBITS == 64 else '<class c_long>'
+        self.assertEquals("[jaccards(None, 17, 67, 78, algorithm=%s, maxTermFreqPercentage=80)]" % algorithm, str(docSetList_for_title.calledMethods))
 
     def testJaccardIndexChecksFields(self):
         drilldown = Drilldown(['title'])
@@ -390,21 +393,3 @@
         drilldown = Drilldown([('field_0', 'field_1')])
         drilldown._add(0, {'field_0': ['value'], 'field_1': ['value']}) # had a bug causing: "non-increasing docid" error
 
-    def testGetIndexMeasure(self):
-        machineBits = calcsize('P') * 8
-        drilldown = Drilldown(['fld0', 'fld1', 'fld2'])
-        measure = drilldown.measure()
-        results = {
-            32: {'dictionaries':1361047,'postings':0, 'terms':0, 'fields':3, 'totalBytes':120},
-            64: {'dictionaries':1360874,'postings':0, 'terms':0, 'fields':3, 'totalBytes':144}
-        }
-        self.assertEquals(results[machineBits], measure)
-        drilldown.addDocument(0, {'fld0':['t1','t2'],'fld1': ['t1','t3']})
-        drilldown.addDocument(1, {'fld1':['t3','t4'],'fld2': ['t4','t5']})
-        drilldown.commit()
-        measure = drilldown.measure()
-        results = {
-            32: {'dictionaries':1361056,'postings':8, 'terms':7, 'fields':3, 'totalBytes':416},
-            64: {'dictionaries':1360889,'postings':8, 'terms':7, 'fields':3, 'totalBytes':628}
-        }
-        self.assertEquals(results[machineBits], measure)
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/facetindex/integerlisttest.py version_1/test/facetindex/integerlisttest.py
--- version_0/test/facetindex/integerlisttest.py	2010-03-25 17:11:27.000000000 +0100
+++ version_1/test/facetindex/integerlisttest.py	2010-03-26 12:01:35.000000000 +0100
@@ -7,7 +7,7 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -211,33 +211,20 @@
     def testSaveWrongDir(self):
         l1 = IntegerList(5)
         try:
-            l1.save('/doesnotexist')
+            l1.save(self.tempdir + '/notexist/doesnotexist')
             self.fail('must raise ioerror')
         except IOError, e:
-            self.assertEquals("[Errno 13] No such file or directory: '/doesnotexist'", str(e))
+            self.assertTrue("[Errno 2] No such file or directory:" in str(e), str(e))
 
     def testLoadWrongDir(self):
         l1 = IntegerList(5)
         try:
-            l1.extendFrom('/doesnotexist')
+            l1.extendFrom(self.tempdir + '/doesnotexist')
             self.fail('must raise ioerror')
         except IOError, e:
-            self.assertEquals("[Errno 2] No such file or directory: '/doesnotexist'", str(e))
+            self.assertTrue("[Errno 2] No such file or directory" in str(e), str(e))
         self.assertEquals([0,1,2,3,4], list(l1))
 
-    def testLoadAndSaveSpeed(self):
-        l = IntegerList(10**6)
-        l1 = IntegerList()
-        t0 = time()
-        l.save(self.tempdir+'/list.bin')
-        t1 = time()
-        l1.extendFrom(self.tempdir+'/list.bin')
-        t2 = time()
-        tsave = t1 - t0
-        tload = t2 - t1
-        self.assertTiming(0.004, tsave, 0.020)
-        self.assertTiming(0.10, tload, 0.50)
-
     def testExtendTo(self):
         def check(expected):
             l2 = IntegerList()
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/facetindex/performancetuningtest.py version_1/test/facetindex/performancetuningtest.py
--- version_0/test/facetindex/performancetuningtest.py	2010-03-25 17:11:27.000000000 +0100
+++ version_1/test/facetindex/performancetuningtest.py	2010-03-26 12:01:35.000000000 +0100
@@ -234,6 +234,19 @@
             print timings
         print timings
 
+    def testLoadAndSaveSpeed(self):
+        l = IntegerList(10**6)
+        l1 = IntegerList()
+        t0 = time()
+        l.save(self.tempdir+'/list.bin')
+        t1 = time()
+        l1.extendFrom(self.tempdir+'/list.bin')
+        t2 = time()
+        tsave = t1 - t0
+        tload = t2 - t1
+        self.assertTiming(0.004, tsave, 0.020)
+        self.assertTiming(0.10, tload, 0.50)
+
 
 # Some tests on Juicer with EduRep 8/2008:
 # (1st time)
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/oai/oaijazztest.py version_1/test/oai/oaijazztest.py
--- version_0/test/oai/oaijazztest.py	2010-03-25 17:11:27.000000000 +0100
+++ version_1/test/oai/oaijazztest.py	2010-03-26 12:01:35.000000000 +0100
@@ -30,7 +30,7 @@
 from cq2utils import CQ2TestCase, CallTrace
 
 from os.path import isfile, join
-from time import time, mktime, strptime
+from time import time, mktime, strptime, sleep
 
 from merescocomponents.oai import OaiJazz
 from merescocomponents.oai.oaijazz import _flattenSetHierarchy, RecordId, SETSPEC_SEPARATOR
@@ -54,11 +54,10 @@
 
     def testOriginalStamp(self):
         jazz = OaiJazz(self.tempdir)
-        stamps = []
-        for i in xrange(1000):
-            stamps.append(jazz._stamp())
-            var = 30.0/2.0
-        self.assertEquals(list(sorted(set(stamps))), stamps, "Stamps not equal.")
+        stamp0 = jazz._stamp()
+        sleep(0.0001)
+        stamp1 = jazz._stamp()
+        self.assertTrue(stamp0 < stamp1, "Expected %s < %s" % (stamp0, stamp1))
 
     def testResultsStored(self):
         self.jazz.addOaiRecord(identifier='oai://1234?34', sets=[], metadataFormats=[('prefix', 'schema', 'namespace')])
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/performancetests.py version_1/test/performancetests.py
--- version_0/test/performancetests.py	1970-01-01 01:00:00.000000000 +0100
+++ version_1/test/performancetests.py	2010-03-26 12:01:35.000000000 +0100
@@ -0,0 +1,48 @@
+#!/usr/bin/env python2.5
+# -*- coding: utf-8 -*-
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
+#       http://www.kennisnetictopschool.nl
+#    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
+#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+
+import os, sys
+os.system('find .. -name "*.pyc" | xargs rm -f')
+
+import test
+
+from glob import glob
+for path in glob('../deps.d/*'):
+    sys.path.insert(0, path)
+sys.path.insert(0,'..')
+
+import unittest
+
+from facetindex.performancetuningtest import PerformanceTuningTest
+
+if __name__ == '__main__':
+    unittest.main()
+    os.system('find .. -name "*.pyc" | xargs rm -f')
