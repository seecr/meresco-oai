Changeset created on Wed Feb 17 21:19:21 CET 2010 by Seek You Too

Description: Bug fix in OAI ListRecords verb

    Fixes a bug in OAI which caused ListRecords to return a double xml response (invalid) when the OAI query returned no records (OaiError 'noRecordsMatch')

Baseline version: merescocomponents/tags/version_2.23.3

diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/merescocomponents/oai/oailist.py version_0-oai-listrecords-bug/merescocomponents/oai/oailist.py
--- version_0/merescocomponents/oai/oailist.py	2010-01-21 20:07:43.000000000 +0100
+++ version_0-oai-listrecords-bug/merescocomponents/oai/oailist.py	2010-02-17 21:18:01.113257588 +0100
@@ -7,7 +7,7 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -134,7 +134,7 @@
             self._queryRecordIds = chain(iter([firstRecord]), result)
         except StopIteration:
             self._queryRecordIds = iter([])
-            self.writeError(webRequest, 'noRecordsMatch')
+            return self.writeError(webRequest, 'noRecordsMatch')
 
     def process(self, webRequest):
         for i, id in enumerate(self._queryRecordIds):
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/alltests.py version_0-oai-listrecords-bug/test/alltests.py
--- version_0/test/alltests.py	2010-01-21 20:07:43.000000000 +0100
+++ version_0-oai-listrecords-bug/test/alltests.py	2010-02-17 21:18:00.716323346 +0100
@@ -80,6 +80,7 @@
 from oai.oailistsetstest import OaiListSetsTest
 from oai.oailisttest import OaiListTest
 from oai.oaipmhtest import OaiPmhTest, OaiPmhWithIdentifierTest
+from oai.oaipmhjazztest import OaiPmhJazzTest
 from oai.oaitooltest import OaiToolTest
 from oai.oaiprovenancetest import OaiProvenanceTest
 from oai.resumptiontokentest import ResumptionTokenTest
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/oai/oaijazztest.py version_0-oai-listrecords-bug/test/oai/oaijazztest.py
--- version_0/test/oai/oaijazztest.py	2010-01-21 20:07:39.000000000 +0100
+++ version_0-oai-listrecords-bug/test/oai/oaijazztest.py	2010-02-17 21:17:59.264563853 +0100
@@ -149,6 +149,10 @@
         self.assertEquals(['42'], list(jazz2.oaiSelect(prefix='/%^!@#$   \n\t', sets=['set%2Spec\n\n'])))
 
 
+    def testOaiSelectWithFromAfterEndOfTime(self):
+        self.jazz.addOaiRecord('42', metadataFormats=[('oai_dc','schema', 'namespace')])
+        result = self.jazz.oaiSelect(prefix='oai_dc', oaiFrom='9999-01-01T00:00:00Z')
+        self.assertEquals(0,len(list(result)))
 
     # unique, for continueAfter
 
@@ -213,4 +217,4 @@
         self.jazz.addOaiRecord('42', metadataFormats=[('prefix','schema', 'namespace')], sets=[('setSpec', 'setName')])
         rmtree(join(self.tempdir, 'identifier2setSpecs'))
         self.assertRaises(AssertionError, lambda: OaiJazz(self.tempdir))
-        
\ No newline at end of file
+        
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/oai/oailisttest.py version_0-oai-listrecords-bug/test/oai/oailisttest.py
--- version_0/test/oai/oailisttest.py	2010-01-21 20:07:39.000000000 +0100
+++ version_0-oai-listrecords-bug/test/oai/oailisttest.py	2010-02-17 21:17:59.263564018 +0100
@@ -7,7 +7,7 @@
 #       http://www.kennisnetictopschool.nl
 #    Copyright (C) 2009 Delft University of Technology http://www.tudelft.nl
 #    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
 #
 #    This file is part of Meresco Components.
 #
@@ -278,6 +278,8 @@
 
         self.assertTrue(self.stream.getvalue().find("noRecordsMatch") > -1)
 
+        self.assertEquals('noRecordsMatch', self.subject.preProcess(self.request))
+
     def testSetsInHeader(self):
         self.request.args = {'verb':['ListRecords'], 'metadataPrefix': ['oai_dc']}
 
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/oai/oaipmhjazztest.py version_0-oai-listrecords-bug/test/oai/oaipmhjazztest.py
--- version_0/test/oai/oaipmhjazztest.py	1970-01-01 01:00:00.000000000 +0100
+++ version_0-oai-listrecords-bug/test/oai/oaipmhjazztest.py	2010-02-17 21:17:59.265563687 +0100
@@ -0,0 +1,70 @@
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2010 Seek You Too (CQ2) http://www.cq2.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+
+from cq2utils import CQ2TestCase, CallTrace
+
+from merescocomponents.oai import OaiPmh, OaiJazz
+from merescocore.framework import Observable, be
+from merescocore.components.http.webrequestserver import WebRequestServer
+from merescocore.components.http.utils import CRLF
+from urllib import urlencode
+from lxml.etree import parse
+from StringIO import StringIO
+
+class OaiPmhJazzTest(CQ2TestCase):
+    def setUp(self):
+        super(OaiPmhJazzTest, self).setUp()
+        self.jazz = OaiJazz(self.tempdir)
+        self.root = be((Observable(),
+            (WebRequestServer(),
+                (OaiPmh(repositoryName='Repository', adminEmail='admin@cq2.nl'),
+                    (self.jazz,)
+                )
+            )
+        ))
+        for i in xrange(20):
+            recordId = 'record:id:%02d' % i
+            metadataFormats = [ ('oai_dc', 'dc-schema', 'dc-namespace')]
+            if i >= 10:
+                metadataFormats.append(('prefix2', 'schema2', 'namespace2'))
+            sets = []
+            if i >= 5:
+                sets.append(('setSpec%s' % ((i//5)*5), 'setName'))
+            if 5 <= i < 10:
+                sets.append(('hierarchical:set', 'hierarchical set'))
+            if 10 <= i < 15:
+                sets.append(('hierarchical', 'hierarchical toplevel only'))
+            self.jazz.addOaiRecord(recordId, sets=sets, metadataFormats=metadataFormats)
+
+    def handleRequest(self, **kwargs):
+        return self.root.all.handleRequest(
+                RequestURI='http://example.org/oai?' + urlencode(kwargs),
+                Headers={},
+                Client=('127.0.0.1', 1324)
+               )
+
+    def testBugListRecordsReturnsDoubleValueOnNoRecordsMatch(self):
+        head, body = ''.join(self.handleRequest(verb='ListRecords', metadataPrefix='oai_dc', **{'from':'9999-01-01'})).split(CRLF * 2)
+        self.assertTrue(parse(StringIO(body)))
+
